"""
Django settings for routeplanner project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
# from decouple import config
from decouple import config
from urllib.parse import quote_plus
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
import os
# SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = config('DJANGO_SECRET_KEY')
ORS_API_KEY = config('ORS_API_KEY')

# password = quote_plus(config('DATABASE_KEY'))
# MONGO_URI = "mongodb+srv://tamarastoof:" + password + "@website.qtybm.mongodb.net/?retryWrites=true&w=majority&appName=website"
# MONGO_DB_NAME = "hikingRoutes"
DEBUG = config('DEBUG')

ALLOWED_HOSTS = ['planyourhike.onrender.com', 'www.planyourhike.onrender.com']


# Application definition

INSTALLED_APPS = [
    'django_csp',
    'frontend',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'axes',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django_csp.middleware.CSPMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'axes.middleware.AxesMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'routeplanner.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            BASE_DIR / 'frontend/templates',
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'routeplanner.wsgi.application'


DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
        'OPTIONS': {
            'sslmode': 'require',  # Ensure SSL is used for the connection
        },
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / "frontend/static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

LOGOUT_REDIRECT_URL = 'index' # Redirect to the home page after logging out


if DEBUG:
    STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'# settings.py

# Session engine, you can use database sessions or cache sessions
SESSION_ENGINE = 'django.contrib.sessions.backends.db'

# Cookie settings
SESSION_COOKIE_AGE = 3600  # 1 hour

# Whether or not to expire the session when the user closes their browser
SESSION_EXPIRE_AT_BROWSER_CLOSE = False

AXES_FAILURE_LIMIT = 5  # Number of failed login attempts before the account is locked
AXES_COOLOFF_TIME = 0.0001#0.0834  # Number*60 = minutes to wait before resetting failed attempts (set to 5 minutes)
AXES_LOCK_OUT_AT_FAILURE = True  # Ensure that the user is locked out after too many failed attempts
AXES_ONLY_USER_FAILURES = True  # Track failed attempts only for users, not IPs
AXES_LOCKOUT_URL = '/locked_out/'  # Redirect to the locked_out page
AXES_LOGIN_FAILURE_LIMIT = 5


AUTHENTICATION_BACKENDS = [
    'axes.backends.AxesStandaloneBackend',  # Add this line
    'django.contrib.auth.backends.ModelBackend',  # Default Django backend
]

# Messages settings
MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'


SECURE_SSL_REDIRECT = True
SECURE_HSTS_SECONDS = 31536000  # 1 year in seconds
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')


# settings.py

CSP_DEFAULT_SRC = ("'self'",)  # Only allow content from the same domain
CSP_SCRIPT_SRC = ("'self'",)  # Allow scripts only from the same domain
CSP_STYLE_SRC = ("'self'",)  # Allow styles only from the same domain
CSP_IMG_SRC = ("'self'",)  # Allow images only from the same domain
CSP_FONT_SRC = ("'self'",)  # Allow fonts only from the same domain
CSP_CONNECT_SRC = ("'self'",)  # Allow AJAX/Fetch requests only to the same domain
CSP_OBJECT_SRC = ("'none'",)  # Disallow embedding of plugins and other objects
CSP_FRAME_SRC = ("'none'",)  # Disallow embedding the site in frames or iframes
